/**
 * @module
 * JSON Web Token (JWT)
 * https://datatracker.ietf.org/doc/html/rfc7519
 */
import type { SignatureAlgorithm } from 'hono/utils/jwt/jwa';
import type { SignatureKey } from 'hono/utils/jwt/jws';
import type { JWTPayload } from 'hono/utils/jwt/types';
export interface TokenHeader {
    alg: SignatureAlgorithm;
    typ?: "JWT";
}
export declare function isTokenHeader(obj: unknown): obj is TokenHeader;
export declare const sign: (payload: JWTPayload, privateKey: SignatureKey, alg?: SignatureAlgorithm) => Promise<string>;
export declare const verify: (token: string, publicKey: SignatureKey, alg?: SignatureAlgorithm) => Promise<JWTPayload>;
export declare const decode: (token: string) => {
    header: TokenHeader;
    payload: JWTPayload;
};
